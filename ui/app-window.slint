import { ScrollView, VerticalBox, HorizontalBox } from "std-widgets.slint";

import { AboutSlint, Button, VerticalBox } from "std-widgets.slint";

struct FlowLayoutItemInfo {
    x: length,
    y: length,
    width: length,
    height: length,
}

component FlowLayout {
    in-out property <[FlowLayoutItemInfo]> item-infos: [{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {},];
    in-out property <length> spacing: 8px;
    in-out property <length> calculated-height: 8px;
    preferred-height: self.calculated-height;

    changed width => {
        self.do-layout(0);
        self.do-layout(1);
        self.do-layout(2);
        self.do-layout(3);
        self.do-layout(4);
        self.do-layout(5);
        self.do-layout(6);
        self.do-layout(7);
        self.do-layout(8);
        self.do-layout(9);
    }

    function do-layout(index: int) {
        if item-infos[index].width == 0 || item-infos[index].height == 0 {
            return;
        }
        if index == 0 {
            item-infos[index].x = 0;
            item-infos[index].y = 0;
        }
        else if item-infos[index - 1].x + item-infos[index - 1].width + spacing + item-infos[index].width >= self.width {
            item-infos[index].x = 0;
            item-infos[index].y = item-infos[index - 1].y + item-infos[index - 1].height + spacing;
        }
        else {
            item-infos[index].x = item-infos[index - 1].x + item-infos[index - 1].width + spacing;
            item-infos[index].y = item-infos[index - 1].y;
        }
        self.calculated-height = item-infos[index].y + item-infos[index].height;
    }

    @children
}

component FlowLayoutItem {
    in-out property <[FlowLayoutItemInfo]> item-infos;
    in-out property <int> index;
    x: item-infos[index].x;
    y: item-infos[index].y;

    init => {
        item-infos[index].width = self.width;
        item-infos[index].height = self.height;
    }

    changed preferred-width => {
        item-infos[index].width = self.width;
        item-infos[index].height = self.height;
    }

    changed preferred-height => {
        item-infos[index].width = self.width;
        item-infos[index].height = self.height;
    }

    @children
}

component Thinger inherits Button {
}

export component AppWindow inherits Window {
    preferred-width: 400px;
    preferred-height: 400px;

    VerticalBox {
        alignment: start;

        Text {
            text: "hi there";
            font-size: 3rem;
        }

        FlowLayout {
            FlowLayoutItem {
                item-infos: parent.item-infos;
                index: 0;
                Thinger { 
                    text: "hi there";
                }
            }
            FlowLayoutItem {
                item-infos: parent.item-infos;
                index: 1;
                Thinger { 
                    text: "hi there how are you today?";
                }
            }
            FlowLayoutItem {
                item-infos: parent.item-infos;
                index: 2;
                Thinger { 
                    text: "hi my friend";
                }
            }
            FlowLayoutItem {
                item-infos: parent.item-infos;
                index: 3;
                Thinger { 
                    text: "wow.";
                }
            }
        }

        Text {
            text: "hello there";
            font-size: 3rem;
        }
    }
}
